name: build

on:
  push:
    branches: [master]

jobs:
  x86_64-linux-gnu-gcc:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - name: Install prerequisites
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build
          sudo apt install -y '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
      - run: cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release
        env:
          CC:   gcc-10
          CXX:  g++-10
      - run: cmake --build build --parallel --target QtESPFlasher
      - name: Find archive file
        run: |
          echo "ARTIFACT_NAME=$(find build -type f -name "QtESPFlasher-*.zip" -printf "%f\n")" >> $GITHUB_ENV
          echo "ARTIFACT_PATH=$(find build -type f -name "QtESPFlasher-*.zip")" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

  x86_64-w64-mingw32-gcc:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - name: Install prerequisites
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build
          sudo pip install aqtinstall
          sudo wget https://mirrors.edge.kernel.org/ubuntu/pool/universe/m/mingw-w64/mingw-w64_11.0.1-2_all.deb
          sudo apt install -y ./mingw-w64_11.0.1-2_all.deb
          sudo wget https://mirrors.edge.kernel.org/ubuntu/pool/universe/libz/libz-mingw-w64/libz-mingw-w64_1.3.1%2Bdfsg-1_all.deb
          sudo apt install -y ./libz-mingw-w64_1.3.1+dfsg-1_all.deb
          sudo wget https://mirrors.edge.kernel.org/ubuntu/pool/universe/libz/libz-mingw-w64/libz-mingw-w64-dev_1.3.1%2Bdfsg-1_all.deb
          sudo apt install -y ./libz-mingw-w64-dev_1.3.1+dfsg-1_all.deb
      - run: cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=CMakeModules/cmake/toolchain-x86_64-w64-mingw32-gcc.cmake
      - run: cmake --build build --parallel --target QtESPFlasher
      - name: Find archive file
        run: |
          echo "ARTIFACT_NAME=$(find build -type f -name "QtESPFlasher-*.zip" -printf "%f\n")" >> $GITHUB_ENV
          echo "ARTIFACT_PATH=$(find build -type f -name "QtESPFlasher-*.zip")" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3.1.3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}